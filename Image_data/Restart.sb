#!/bin/bash --login
#SBATCH -c 1
#SBATCH -n 1
#SBATCH --time=4:00:00
#SBATCH --mem=2gb
#SBATCH --array 0
#SBATCH --output "./Output/%a_%A_slurm.output"
##SBATCH --mail-type=END
##SBATCH --array 0-407

export RESTART_TIME=$(( 4 * 60 * 60 - 60 * 5 ))

#Log a copy of this script in the output file
cat $0

echo "Job running on ${HOSTNAME}"

if [[ -d ../envs ]]
then
	echo "Activating Conda"
	conda activate ../envs
fi

which python

export PYTHONPATH=${PYTHONPATH}:${SLURM_SUBMIT_DIR}:${SLURM_SUBMIT_DIR}/../

out_folder=${TMPDIR}/${SLURM_ARRAY_TASK_ID}/
echo Output sent to $out_folder 
mkdir -p $out_folder 

tarfile=${SLURM_ARRAY_TASK_ID}_jobfiles.tgz
pastdata=${SLURM_SUBMIT_DIR}/Output/${tarfile}  
if [ -f ${pastdata} ]
then
	echo "Loading Checkpoint"
	cp ${pastdata} ${TMPDIR}
	cd ${TMPDIR}
	tar -xzvf $tarfile
	cd ${SLURM_SUBMIT_DIR}
	
fi
echo Running from $PWD

srun --unbuffered python BatchRun.py --BMCV --Sky -C --checkpoint=${out_folder}/${SLURM_ARRAY_TASK_ID}_checkpoint.pop -o $out_folder -i ${SLURM_ARRAY_TASK_ID} -g 400 -p 500 -s ${SLURM_ARRAY_TASK_ID} &
export PID=$!
echo "PID=$PID"
( echo "Sleeping Timer ${RESTART_TIME}"; echo "PID=$PID"; sleep $RESTART_TIME; echo "Stopping python"; kill $PID)& 

wait $PID
RET=$?

#zip up this folder
cd ${TMPDIR}
tar -czvf ${pastdata} ./${SLURM_ARRAY_TASK_ID}/ 

#House Cleaning
cd ${SLURM_SUBMIT_DIR} 
rm -rf ${TMPDIR}/*

if [ $RET -eq 0 ] || [ $RET -eq 137 ]
then                                                                                                                          
	if [ ! -f STOP.STOP ]
	then
		sbatch --array ${SLURM_ARRAY_TASK_ID} $0
	else
		echo "STOP.STOP found. Ending run"
	fi

	#Job Statistics
	module load powertools
	js -j $SLURM_JOB_ID
else
	echo "RETURN code: $RET"
        echo "ERROR running BatchRun. Aborting Checkpoint Restart"                                                                  
fi
echo "Done"

##########################
